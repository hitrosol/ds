# -*- coding: utf-8 -*-
"""[PROJECT]_project_v11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kcvfM5-5PWcRjmz4lrk9FSj5BGWl0SHT
"""

import pandas as pd
import numpy as np

df_fbm = pd.read_excel('/Users/pancaputrapakpahan/Desktop/converter/content/book_fbm.xlsx')
df_fbm.head(10)

df_fbk = pd.read_excel('/Users/pancaputrapakpahan/Desktop/converter/content/book_fbk.xlsx')
df_fbk.head(10)

def extract_values(df):
  js_temp = {}
  js_temp['No Document'] = df[9]
  js_temp['Office'] = 'HO'
  js_temp['Code Product'] = df[0]
  js_temp['Nama Product'] = df[1]
  #js_temp['Kandungan / Ukuran'] = df[2]
  js_temp['Expired Date'] = df[4]
  js_temp['Tanggal'] = df[10]
  js_temp['Vendor'] = df[11]
  js_temp['From'] = 'Vendor'
  js_temp['To'] = 'HO'
  js_temp['REF'] = df[12]
  js_temp['Quantity'] = df[5]
  js_temp['Satuan'] = df[3]
  js_temp['Unit Price'] = df[6]
  js_temp['Total Price'] =df[7]
  js_temp['Reconciled'] = ' '
  return js_temp
extract_values(df_fbm.iloc[0])

def extract_values_fbk(df):
  js_temp = {}
  js_temp['No Document'] = df[9]
  js_temp['Office'] = 'HO'
  js_temp['Code Product'] = df[0]
  if type(df[1]) == str:
    js_temp['Nama Product'] = df[1]
  else:
    js_temp['Nama Product'] = df[2]
  #js_temp['Kandungan / Ukuran'] = df[2]
  js_temp['Expired Date'] = df[4]
  js_temp['Tanggal'] = df[10]
  js_temp['Vendor'] = ' '#df[11]
  js_temp['From'] = 'HO'
  if df[11] == 'KEI':
    js_temp['REF'] = 'KEI'
    js_temp['To'] = 'Transit'
    if type(df[0]) == str:
      js_temp['Reconciled'] = str(df[0]) + (str(js_temp['No Document']))
  if df[11] == 'RSA 3':
    js_temp['To'] = 'Transit'
    js_temp['REF'] = 'RSA 3'
    if type(df[0]) == str:
      js_temp['Reconciled'] = str(df[0].strip(' ')) + (str(js_temp['No Document']))
  if df[11] != 'KEI' and df[11] != 'RSA 3':
    js_temp['To'] = 'Pakai'
    js_temp['Reconciled'] = ' '
    js_temp['REF'] = df[12]
  js_temp['Quantity'] = df[5]
  js_temp['Satuan'] = df[3]
  js_temp['Unit Price'] = df[6]
  js_temp['Total Price'] = df[7]
  return js_temp
extract_values_fbk(df_fbk.iloc[154])

counter = 0
df_final = pd.DataFrame()
for x in range(len(df_fbm)):
  data_process_1 = df_fbm.loc[x]
  if type(data_process_1['CODE']) == str:
    data_process_2 = extract_values(data_process_1)
    df_final= df_final.append(pd.DataFrame(data_process_2, index=[0]))

for x in range(len(df_fbk)):
  data_process_1 = df_fbk.loc[x]
  if type(data_process_1['CODE']) == str:
    data_process_2 = extract_values_fbk(data_process_1)
    df_final= df_final.append(pd.DataFrame(data_process_2, index=[0]))
df_final['Code Product'] = [x.strip(' ') for x in df_final['Code Product']]

df_final.info()

df_sa= pd.read_excel('/content/stok_awal_v2.xlsx', header=1)
df_sa.head()

df_sa['KODE'] = df_sa['KODE'].astype(str)
df_sa['HO/FO'] = df_sa['HO/FO'].astype(str)

def sfg(fg):
  return fg.strip()
df_sa['KODE'] = df_sa['KODE'].apply(sfg)
df_sa['HO/FO'] = df_sa['HO/FO'].apply(sfg)

s = df_sa.loc[df_sa['KODE']=='A-E009']
#s = s.loc[s['HO/FO'] == 'KEI']
#s[['QTY.41','AMOUNT.40']]
#s.loc[s['REF'] != 'SUBTOTAL KEI']
s.head()

def extract_sa_ho(df):
  search = df.loc[df['HO/FO'] == 'HO']
  search = search.loc[search['REF'] != 'TOTAL HO']
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  for index, row in search.iterrows():
    if row['QTY.41'] != 0:
      js_temp['No Document'].append('HO_Saldo_Awal')
      js_temp['Office'].append('HO')
      js_temp['Code Product'].append(row['KODE'])
      js_temp['Nama Product'].append(row['NAMA OBAT'])
      js_temp['Expired Date'].append('')
      js_temp['Tanggal'].append(np.datetime64("2020-12-31"))
      js_temp['Vendor'].append('')
      js_temp['From'].append('Saldo Awal')
      js_temp['To'].append('HO')
      js_temp['REF'].append('Saldo Awal')
      js_temp['Quantity'].append(row['QTY.41'])
      js_temp['Satuan'].append(row['SATUAN'])
      js_temp['Unit Price'].append(row['PRICE'])
      js_temp['Total Price'].append(row['AMOUNT.40'])
      js_temp['Reconciled'].append(' ')
  return js_temp
pd.DataFrame(extract_sa_ho(s))

def extract_sa_rsa_3(df):
  search = df.loc[df['HO/FO'] == 'RSA 3']
  search = search.loc[search['REF'] != 'SUBTOTAL RSA 3']
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  for index, row in search.iterrows():
    if row['QTY.41'] != 0:
      js_temp['No Document'].append('RSA_3_Saldo_Awal')
      js_temp['Office'].append('RSA 3')
      js_temp['Code Product'].append(row['KODE'])
      js_temp['Nama Product'].append(row['NAMA OBAT'])
      js_temp['Expired Date'].append('')
      js_temp['Tanggal'].append(np.datetime64("2020-12-31"))
      js_temp['Vendor'].append('')
      js_temp['From'].append('Saldo Awal')
      js_temp['To'].append('RSA 3')
      js_temp['REF'].append('Saldo Awal')
      js_temp['Quantity'].append(row['QTY.41'])
      js_temp['Satuan'].append(row['SATUAN'])
      js_temp['Unit Price'].append(row['PRICE'])
      js_temp['Total Price'].append(row['AMOUNT.40'])
      js_temp['Reconciled'].append(' ')
  return js_temp
extract_sa_rsa_3(s)

def extract_sa_kei(df):
  search = df.loc[df['HO/FO'] == 'KEI']
  search = search.loc[search['REF'] != 'SUBTOTAL KEI']
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  for index, row in search.iterrows():
    if row['QTY.41'] != 0:
      js_temp['No Document'].append('KEI_Saldo_Awal')
      js_temp['Office'].append('KEI')
      js_temp['Code Product'].append(row['KODE'])
      js_temp['Nama Product'].append(row['NAMA OBAT'])
      js_temp['Expired Date'].append('')
      js_temp['Tanggal'].append(np.datetime64("2020-12-31"))
      js_temp['Vendor'].append('')
      js_temp['From'].append('Saldo Awal')
      js_temp['To'].append('KEI')
      js_temp['REF'].append('Saldo Awal')
      js_temp['Quantity'].append(row['QTY.41'])
      js_temp['Satuan'].append(row['SATUAN'])
      js_temp['Unit Price'].append(row['PRICE'])
      js_temp['Total Price'].append(row['AMOUNT.40'])
      js_temp['Reconciled'].append(' ')
  return js_temp
extract_sa_kei(s)

df_sa_proses = pd.DataFrame()
for x in df_sa['KODE'].unique():
  if type(x) == str:
    check = df_sa.loc[df_sa['KODE']==x]
    if len(check.loc[check['REF']=='SUBTOTAL RSA 3']) != 0:
      data_process_1 = extract_sa_rsa_3(check)
      df_sa_proses= df_sa_proses.append(pd.DataFrame(data_process_1))
    if len(check.loc[check['REF']=='SUBTOTAL KEI']) != 0:
      data_process_2 = extract_sa_kei(check)
      df_sa_proses= df_sa_proses.append(pd.DataFrame(data_process_2))
    if len(check.loc[check['REF']=='TOTAL HO']) != 0:
      data_process_3 = extract_sa_ho(check)
      df_sa_proses= df_sa_proses.append(pd.DataFrame(data_process_3))
    #break

df_final = df_final.append(df_sa_proses)

df_rsa_3 = pd.read_excel('/content/RSA 3 - UPDATE 22 Desember-Final_revisi_panca.xlsx', header=1)
df_rsa_3 = df_rsa_3.dropna(how='all')
df_rsa_3.head(10)

def strip_auto(df):
  if type(df) == str:
    return df.strip(' ')
  else:
    return df
df_rsa_3['CODE'] = df_rsa_3['CODE'].apply(strip_auto)

kolom_masuk = ['BARANG MASUK.7', 'BARANG MASUK.8', 'BARANG MASUK.9', 'BARANG MASUK.10', 'BARANG MASUK.11', 'BARANG MASUK.12', 'BARANG MASUK.13', 'BARANG MASUK.14', 'BARANG MASUK.15', 'BARANG MASUK.16', 'BARANG MASUK.17', 'BARANG MASUK.18']
kolom_keluar = ['BARANG KELUAR.7', 'BARANG KELUAR.8', 'BARANG KELUAR.9', 'BARANG KELUAR.10', 'BARANG KELUAR.11', 'BARANG KELUAR.12', 'BARANG KELUAR.13', 'BARANG KELUAR.14', 'BARANG KELUAR.15', 'BARANG KELUAR.16', 'BARANG KELUAR.17', 'BARANG KELUAR.18']
bulan = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']
#tanggal = ['31/1/2021', '31/1/2021', '31/1/2021', '31/2/2021', '31/3/2021', '31/1/2021', '31/1/2021', '31/1/2021', '31/1/2021'. '31/1/2021', '31/1/2021', '31/1/2021']

def trans_product_rsa_3_out(df, exp_date):
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  for x in range(len(bulan)):
    for index, row in df.iterrows():
      if row[kolom_keluar[x]] !=  0:
          #print ('keluar', bulan[x], row[kolom_keluar[x]], row['PRICE'])
          js_temp['No Document'].append(str('RSA 3_OUT')+str(row['CODE'])+str(row[kolom_masuk[x]])+str(x))
          js_temp['Office'].append('RSA 3')
          js_temp['Code Product'].append(row['CODE'])
          js_temp['Nama Product'].append(row['NAMA OBAT'])
          js_temp['Expired Date'].append(exp_date)
          js_temp['Tanggal'].append(bulan[x])
          js_temp['Vendor'].append('')
          js_temp['From'].append('RSA 3')
          js_temp['To'].append('Pakai')
          js_temp['REF'].append(' ')
          js_temp['Quantity'].append(row[kolom_keluar[x]])
          js_temp['Satuan'].append(row['SATUAN'])
          js_temp['Unit Price'].append(row['PRICE'])
          js_temp['Total Price'].append(row[kolom_keluar[x]]*row['PRICE'])
          js_temp['Reconciled'].append(' ')
  return js_temp
#trans_product_rsa_3_out(s, 'kl')

def trans_product_rsa_3_in(df, exp_date):
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  for x in range(len(bulan)):
    for index, row in df.iterrows():
      if row[kolom_masuk[x]] !=  0:
        #if row[kolom_masuk[x]] == na:
          #print ('transit masuk', bulan[x], row[kolom_masuk[x]])
          js_temp['No Document'].append(str('RSA 3')+str(row['CODE'])+str(row[kolom_masuk[x]]))
          js_temp['Office'].append('RSA 3')
          js_temp['Code Product'].append(row['CODE'])
          js_temp['Nama Product'].append(row['NAMA OBAT'])
          js_temp['Expired Date'].append(exp_date)
          js_temp['Tanggal'].append(bulan[x])
          js_temp['Vendor'].append('')
          js_temp['From'].append('Transit')
          js_temp['To'].append('RSA 3')
          js_temp['REF'].append('')
          js_temp['Quantity'].append(row[kolom_masuk[x]])
          js_temp['Satuan'].append(row['SATUAN'])
          js_temp['Unit Price'].append(row['PRICE'])
          js_temp['Total Price'].append(row[kolom_masuk[x]]*row['PRICE'])
          js_temp['Reconciled'].append('')
  return js_temp
#trans_product_rsa_3_in(s,'kl')
#df_trss

def check_ts(df, st):
  js_temp =  {
      'No Document': [],
      'Office': [],
      'Code Product': [], 
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  kode = str(df['Code Product'].values[0])
  nama = str(df['Nama Product'].values[0])
  exp_date_ = str(df['Expired Date'].values[0])
  satuan = str(df['Satuan'].values[0])
  adf = {
      'Bulan': [],
      'Jumlah Kirim Ho': [],
      'Jumlah Masuk RSA 3': [],
      'rk': [],
      'Saldo': []
  }
  for x in bulan:
    search_ho = st.loc[st['Month']==x]
    search_rsa_3 = df.loc[df['Tanggal']==x]
    saldo_masuk_rsa_3 = search_rsa_3['Quantity'].sum()
    saldo_keluar_ho = search_ho['Quantity'].sum()
    rk = search_ho['rk'].values
    adf['Bulan'].append(x)
    adf['Jumlah Kirim Ho'].append(saldo_keluar_ho)
    adf['Jumlah Masuk RSA 3'].append(saldo_masuk_rsa_3)
    adf['rk'].append(rk)
    adf['Saldo'].append(search_rsa_3['Unit Price'].values)
  adf = pd.DataFrame(adf)
  #print (adf['Jumlah Masuk RSA 3'].values)
  for x in range(len(adf['Bulan'])):
    #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Kirim Ho'], adf.iloc[x]['Jumlah Masuk RSA 3'], adf.iloc[x]['rk'], adf.iloc[x]['Saldo'])
    if adf.iloc[x]['Jumlah Kirim Ho'] == adf.iloc[x]['Jumlah Masuk RSA 3'] and (adf.iloc[x]['Jumlah Kirim Ho'] != 0 or adf.iloc[x]['Jumlah Masuk RSA 3'] !=0):
      for r_k in adf.iloc[x]['rk']:
        qtyyy = st.loc[st['rk'] == r_k]['Quantity'].sum()
        sdf = adf.iloc[x]['Bulan']
        adf.at[bulan.index(sdf),'Jumlah Masuk RSA 3']= 0
        price_added = st.loc[st['rk'] == r_k]['Price'].values[0]
        js_temp['No Document'].append(str('RSA 3_IN')+str(kode)+str(adf.iloc[x]['Jumlah Kirim Ho'])+str(adf.iloc[x]['Bulan']))
        js_temp['Office'].append('RSA 3')
        js_temp['Code Product'].append(kode)
        js_temp['Nama Product'].append(nama)
        js_temp['Expired Date'].append(exp_date_)
        js_temp['Tanggal'].append(adf.iloc[x]['Bulan'])
        js_temp['Vendor'].append('')
        js_temp['From'].append('Transit')
        js_temp['To'].append('RSA 3')
        js_temp['REF'].append('')
        js_temp['Quantity'].append(qtyyy)
        js_temp['Satuan'].append(satuan)
        js_temp['Unit Price'].append(price_added)
        js_temp['Total Price'].append(price_added*qtyyy)
        js_temp['Reconciled'].append(r_k)
    elif adf.iloc[x]['Jumlah Kirim Ho'] != 0 or adf.iloc[x]['Jumlah Masuk RSA 3'] !=0:
      for r_k_k in adf.iloc[x]['rk']:
        qtyyy = st.loc[st['rk'] == r_k_k]['Quantity'].sum()
        price_added = st.loc[st['rk'] == r_k_k]['Price'].values[0]
        #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Kirim Ho'], r_k_k, qtyyy, adf.iloc[x]['Jumlah Masuk RSA 3'])
        if adf.iloc[x]['Jumlah Masuk RSA 3'] >= qtyyy:
          sisa = adf.iloc[x]['Jumlah Masuk RSA 3'] - qtyyy
          sdf = adf.iloc[x]['Bulan']
          adf.at[bulan.index(sdf),'Jumlah Masuk RSA 3']= sisa
          js_temp['No Document'].append(str('RSA 3_IN')+str(kode)+str(qtyyy)+str(sdf))
          js_temp['Office'].append('RSA 3')
          js_temp['Code Product'].append(kode)
          js_temp['Nama Product'].append(nama)
          js_temp['Expired Date'].append(exp_date_)
          js_temp['Tanggal'].append(sdf)
          js_temp['Vendor'].append('')
          js_temp['From'].append('Transit')
          js_temp['To'].append('RSA 3')
          js_temp['REF'].append('')
          js_temp['Quantity'].append(qtyyy)
          js_temp['Satuan'].append(satuan)
          js_temp['Unit Price'].append(price_added)
          js_temp['Total Price'].append(price_added*qtyyy)
          js_temp['Reconciled'].append(r_k_k)        
        else:
          total_com = qtyyy 
          #print (adf['Jumlah Masuk RSA 3'].values)
          #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Kirim Ho'], r_k_k, qtyyy, adf.iloc[x]['Jumlah Masuk RSA 3'])
          for b in range(bulan.index(adf.iloc[x]['Bulan']), len(bulan)):
            masuk_rsa_3_bulan = adf.loc[adf['Bulan']==bulan[b]]['Jumlah Masuk RSA 3'].sum()
            keluar_ho_bulan = adf.loc[adf['Bulan']==bulan[b]]['Jumlah Kirim Ho'].sum()
            #print (bulan[b], total_com, masuk_rsa_3_bulan, keluar_ho_bulan)
            if total_com > masuk_rsa_3_bulan:
              bulan_terakhir_ada = df['Tanggal'].values[-1]
              #print (bulan_terakhir_ada)
              if bulan[b] != bulan_terakhir_ada:
                if adf['Jumlah Masuk RSA 3'].values[b:].sum() <  total_com:
                  continue
                else:
                  total_com = total_com  - masuk_rsa_3_bulan
                  sdf = adf.loc[adf['Bulan']==bulan[b]].index.to_list()[0]
                  adf.at[sdf,'Jumlah Masuk RSA 3']= 0
                  #print ('k', total_com)
                  continue
            if total_com <= masuk_rsa_3_bulan:
              #if bulan[b] != 'Desember':
             # print ('j', bulan[b], total_com)
              sisa = masuk_rsa_3_bulan - total_com
              sdf = adf.loc[adf['Bulan']==bulan[b]].index.to_list()[0]
              adf.at[sdf,'Jumlah Masuk RSA 3']= sisa
              #print ('j', total_com, bulan[b], sdf)
              js_temp['No Document'].append(str('RSA 3_IN')+str(kode)+str(qtyyy)+str(sdf))
              js_temp['Office'].append('RSA 3')
              js_temp['Code Product'].append(kode)
              js_temp['Nama Product'].append(nama)
              js_temp['Expired Date'].append(exp_date_)
              js_temp['Tanggal'].append(bulan[b])
              js_temp['Vendor'].append('')
              js_temp['From'].append('Transit')
              js_temp['To'].append('RSA 3')
              js_temp['REF'].append('')
              js_temp['Quantity'].append(qtyyy)
              js_temp['Satuan'].append(satuan)
              js_temp['Unit Price'].append(price_added)
              js_temp['Total Price'].append(price_added*qtyyy)
              js_temp['Reconciled'].append(r_k_k)
              break
                
      #print (bulan)        
        #print (adf['Jumlah Masuk RSA 3'].values, bulan[x], qtyyy)

  for x in range(len(adf)):
    if adf.iloc[x]['Jumlah Masuk RSA 3'] != 0:
      #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Masuk RSA 3'])
      js_temp['No Document'].append(str('RSA 3_IN')+str(kode)+str(adf.iloc[x]['Jumlah Masuk RSA 3'])+str(adf.iloc[x]['Bulan']))
      js_temp['Office'].append('RSA 3')
      js_temp['Code Product'].append(kode)
      js_temp['Nama Product'].append(nama)
      js_temp['Expired Date'].append(exp_date_)
      js_temp['Tanggal'].append(adf.iloc[x]['Bulan'])
      js_temp['Vendor'].append('')
      js_temp['From'].append('Vendor')
      js_temp['To'].append('RSA 3')
      js_temp['REF'].append('')
      js_temp['Quantity'].append(adf.iloc[x]['Jumlah Masuk RSA 3'])
      js_temp['Satuan'].append(satuan)
      js_temp['Unit Price'].append(adf.iloc[x]['Saldo'][-1])
      js_temp['Total Price'].append(adf.iloc[x]['Saldo'][-1] * adf.iloc[x]['Jumlah Masuk RSA 3'])
      js_temp['Reconciled'].append('')
  #print (adf['Jumlah Masuk RSA 3'].values)


        #adf.at[x+1,'Saldo']=(adf.iloc[x]['Jumlah Masuk RSA 3'] - adf.iloc[x]['Jumlah Kirim Ho']) + adf.iloc[x]['Saldo']
  return js_temp
#print (pd.DataFrame(check_ts(data_process_in, pd.DataFrame(unique_st)))['Quantity'].sum())
#pd.DataFrame(check_ts(data_process_in, pd.DataFrame(unique_st)))

#asd

rsa_3_trans = pd.DataFrame()
for x in df_rsa_3['CODE'].unique()[1:]:
  #x = 'A-E008'
  search_code = df_final.loc[df_final['Code Product']==x]
  #search_code_2 = search_code.loc[search_code['Reconciled']!=' '].sort_values('Tanggal')
  search_code_2 = search_code.loc[search_code['To']=='Transit']
  search_code_2 = search_code_2.loc[search_code_2['REF']=='RSA 3']
  unique_rk = [x for x in search_code_2['Reconciled'].unique() if x != ' ']
  search_rsa_3 = df_rsa_3.loc[df_rsa_3['CODE']==x]
  #print (search_code_2['Expired Date'].values[0])
  if (len(search_rsa_3) != 0) and (len(search_code) != 0) :
    data_process_out = trans_product_rsa_3_out(search_rsa_3, search_code['Expired Date'].values[0])
    rsa_3_trans = rsa_3_trans.append(pd.DataFrame(data_process_out))
    if len(trans_product_rsa_3_in(search_rsa_3, search_code['Expired Date'].values[0])['Code Product']) != 0:
      data_process_in = pd.DataFrame(trans_product_rsa_3_in(search_rsa_3, search_code['Expired Date'].values[0]))
      unique_st = {
          'rk': [],
          'Quantity': [],
          'Month': [],
          'Price': []
      }
      for m in range(len(unique_rk)):
        sss = search_code_2.loc[search_code_2['Reconciled'] == unique_rk[m]]
        unique_st['rk'].append(sss['Reconciled'].values[0])
        unique_st['Quantity'].append(sss['Quantity'].sum())
        unique_st['Price'].append(sss['Unit Price'].sum())
        unique_st['Month'].append(bulan[sss['Tanggal'].iloc[0].month-1])
      tfg = pd.DataFrame(check_ts(data_process_in, pd.DataFrame(unique_st)))
      rsa_3_trans = rsa_3_trans.append(pd.DataFrame(tfg))
  #break
rsa_3_trans

df_final = df_final.append(rsa_3_trans)

df_kei_data = pd.read_excel('/content/KEI MUTASI.xlsx')
df_kei_data['CODE'] = df_kei_data['CODE'].fillna(0)
df_kei_data['CODE'] = df_kei_data['CODE'].apply(strip_auto)
df_kei_data['CODE'] = df_kei_data['CODE'].replace('TOTAL KEI',np.nan)
df_kei_data['CODE'] = df_kei_data['CODE'].fillna(method='ffill')
df_kei_data.head()

kolom_masuk_kei = ['BM-Jan 21', 'BM-Feb 21', 'BM-Mrt 21', 'BM-Apr 21', 'BM-Mei 21', 'BM-Jun 21', 'BM_Jul 21', 'BM_Agst21', 'BARANG MASUK_Sept21', 'BARANG MASUK_Okt21', 'BM_Nop21', "BARANG MASUK_Des'21"]
kolom_keluar_kei = ['BK_Jan21', 'BK Feb21', 'BK_Mrt 21', 'BK_Apr21', 'BK_Mei 21', 'BK_Jun21', 'BK_Jul 21', 'BK_Agst 21', 'BARANG KELUAR_Sept 21', 'BARANG KELUAR_Okt 21', 'BARANG KELUAR_Nop 21', "BARANG KELUAR_Des 21"]

df_kei_data[kolom_masuk_kei] = df_kei_data[kolom_masuk_kei].replace(np.nan, 0)
df_kei_data[kolom_keluar_kei] = df_kei_data[kolom_keluar_kei].replace(np.nan, 0)

test_case = ['A-B046', 'A-F004', 'N-P005']
s =  df_kei_data.loc[df_kei_data['CODE']=='O-Z001']
s

s[kolom_masuk_kei]

s[kolom_keluar_kei]

"""for x in df_kei_data['CODE'].unique():
  if x != 0:
    search = df_kei_data[df_kei_data['CODE']==x]
    masuk_benar = search.iloc[0:-1][kolom_masuk_kei].sum().sum()
    keluar_benar = search.iloc[0:-1][kolom_keluar_kei].sum().sum()
    if search.iloc[-1]["STOCK AKHIR DES '2021"] != (masuk_benar-keluar_benar):
      print (x, search.iloc[-1]["STOCK AKHIR DES '2021"], masuk_benar- keluar_benar )"""

def trans_product_kei_out_rev(df, exp_date):
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  nama = df['NAMA OBAT'].values[0]
  df =df.iloc[-1]
  
  for x in range(len(bulan)):
    if df[kolom_keluar_kei[x]] !=  0:
          js_temp['No Document'].append(str('KEI_OUT')+str(df['CODE'])+str(df[kolom_keluar_kei[x]])+str(x))
          js_temp['Office'].append('KEI')
          js_temp['Code Product'].append(df['CODE'])
          js_temp['Nama Product'].append(nama)
          js_temp['Expired Date'].append(exp_date)
          js_temp['Tanggal'].append(bulan[x])
          js_temp['Vendor'].append('')
          js_temp['From'].append('KEI')
          js_temp['To'].append('Pakai')
          js_temp['REF'].append(' ')
          js_temp['Quantity'].append(df[kolom_keluar_kei[x]])
          js_temp['Satuan'].append(df['SATUAN'])
          js_temp['Unit Price'].append('')#df['PRICE'])
          js_temp['Total Price'].append('')#df['PRICE']*df[kolom_keluar_kei[x]])
          js_temp['Reconciled'].append(' ')
  return js_temp
trans_product_kei_out_rev(s, 'kl')

"""def trans_product_kei_out(df, exp_date):
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  nama = df['NAMA OBAT'].values[0]
  df =df.iloc[-1]
  
  for x in range(len(bulan)):
    if df[kolom_keluar_kei[x]] !=  0:
          js_temp['No Document'].append(str('KEI_OUT')+str(df['CODE'])+str(df[kolom_keluar_kei[x]])+str(x))
          js_temp['Office'].append('KEI')
          js_temp['Code Product'].append(df['CODE'])
          js_temp['Nama Product'].append(nama)
          js_temp['Expired Date'].append(exp_date)
          js_temp['Tanggal'].append(bulan[x])
          js_temp['Vendor'].append('')
          js_temp['From'].append('KEI')
          js_temp['To'].append('Pakai')
          js_temp['REF'].append(' ')
          js_temp['Quantity'].append(df[kolom_keluar_kei[x]])
          js_temp['Satuan'].append(df['SATUAN'])
          js_temp['Unit Price'].append("")
          js_temp['Total Price'].append("")
          js_temp['Reconciled'].append(' ')
  return js_temp
trans_product_kei_out(s, 'kl')"""

def trans_product_kei_in_rev(df, exp_date):
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  nama = df['NAMA OBAT'].values[0]
  for x in range(len(bulan)):
    for index, row in df.iterrows():
      #print (row[kolom_masuk_kei[x]], x)
      if row[kolom_masuk_kei[x]] !=  0:
        if type(row[kolom_keluar_kei[x]]) != float :
          js_temp['No Document'].append(str('KEI')+str(row['CODE'])+str(row[kolom_masuk_kei[x]]))
          js_temp['Office'].append('KEI')
          js_temp['Code Product'].append(row['CODE'])
          js_temp['Nama Product'].append(nama)
          js_temp['Expired Date'].append(exp_date)
          js_temp['Tanggal'].append(bulan[x])
          js_temp['Vendor'].append('')
          js_temp['From'].append('Transit')
          js_temp['To'].append('KEI')
          js_temp['REF'].append('')
          js_temp['Quantity'].append(row[kolom_masuk_kei[x]])
          js_temp['Satuan'].append(row['SATUAN'])
          js_temp['Unit Price'].append('')#row['PRICE'])
          js_temp['Total Price'].append('')#row['PRICE']*row[kolom_masuk_kei[x]])
          js_temp['Reconciled'].append('')
  return js_temp
trans_product_kei_in_rev(s,'kl')

def trans_product_kei_in(df, exp_date):
  js_temp = {
      'No Document': [],
      'Office': [],
      'Code Product': [],
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  #df = df.iloc[:-1]
  nama = df['NAMA OBAT'].values[0]
  for x in range(len(bulan)):
    for index, row in df.iterrows():
      #print (row[kolom_masuk_kei[x]], x)
      if row[kolom_masuk_kei[x]] !=  0:
        if type(row[kolom_keluar_kei[x]]) != float :
          js_temp['No Document'].append(str('KEI')+str(row['CODE'])+str(row[kolom_masuk_kei[x]]))
          js_temp['Office'].append('KEI')
          js_temp['Code Product'].append(row['CODE'])
          js_temp['Nama Product'].append(nama)
          js_temp['Expired Date'].append(exp_date)
          js_temp['Tanggal'].append(bulan[x])
          js_temp['Vendor'].append('')
          js_temp['From'].append('Transit')
          js_temp['To'].append('KEI')
          js_temp['REF'].append('')
          js_temp['Quantity'].append(row[kolom_masuk_kei[x]])
          js_temp['Satuan'].append(row['SATUAN'])
          js_temp['Unit Price'].append('')
          js_temp['Total Price'].append('')
          js_temp['Reconciled'].append('')
  return js_temp
#trans_product_kei_in(search_rsa_3,'kl')

def check_ts_kei_rev(df, st):
  js_temp =  {
      'No Document': [],
      'Office': [],
      'Code Product': [], 
      'Nama Product': [],
      'Expired Date': [],
      'Tanggal': [],
      'Vendor': [],
      'From': [],
      'To': [],
      'REF': [],
      'Quantity': [],
      'Satuan': [],
      'Unit Price': [],
      'Total Price': [],
      'Reconciled': []
  }
  kode = str(df['Code Product'].values[0])
  nama = str(df['Nama Product'].values[0])
  exp_date_ = str(df['Expired Date'].values[0])
  satuan = str(df['Satuan'].values[0])
  adf = {
      'Bulan': [],
      'Jumlah Kirim Ho': [],
      'Jumlah Masuk RSA 3': [],
      'rk': [],
      'Saldo': []
  }
  for x in bulan:
    search_ho = st.loc[st['Month']==x]
    search_rsa_3 = df.loc[df['Tanggal']==x]
    saldo_masuk_rsa_3 = search_rsa_3['Quantity'].sum()
    saldo_keluar_ho = search_ho['Quantity'].sum()
    rk = search_ho['rk'].values
    adf['Bulan'].append(x)
    adf['Jumlah Kirim Ho'].append(saldo_keluar_ho)
    adf['Jumlah Masuk RSA 3'].append(saldo_masuk_rsa_3)
    adf['rk'].append(rk)
    adf['Saldo'].append(search_rsa_3['Unit Price'].values)
  adf = pd.DataFrame(adf)
  #print (adf['Jumlah Masuk RSA 3'].values)
  for x in range(len(adf['Bulan'])):
    #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Kirim Ho'], adf.iloc[x]['Jumlah Masuk RSA 3'], adf.iloc[x]['rk'], adf.iloc[x]['Saldo'])
    if adf.iloc[x]['Jumlah Kirim Ho'] == adf.iloc[x]['Jumlah Masuk RSA 3'] and (adf.iloc[x]['Jumlah Kirim Ho'] != 0 or adf.iloc[x]['Jumlah Masuk RSA 3'] !=0):
      for r_k in adf.iloc[x]['rk']:
        qtyyy = st.loc[st['rk'] == r_k]['Quantity'].sum()
        sdf = adf.iloc[x]['Bulan']
        adf.at[bulan.index(sdf),'Jumlah Masuk RSA 3']= 0
        price_added = st.loc[st['rk'] == r_k]['Price'].values[0]
        js_temp['No Document'].append(str('KEI_IN')+str(kode)+str(adf.iloc[x]['Jumlah Kirim Ho'])+str(adf.iloc[x]['Bulan']))
        js_temp['Office'].append('KEI')
        js_temp['Code Product'].append(kode)
        js_temp['Nama Product'].append(nama)
        js_temp['Expired Date'].append(exp_date_)
        js_temp['Tanggal'].append(adf.iloc[x]['Bulan'])
        js_temp['Vendor'].append('')
        js_temp['From'].append('Transit')
        js_temp['To'].append('KEI')
        js_temp['REF'].append('')
        js_temp['Quantity'].append(qtyyy)
        js_temp['Satuan'].append(satuan)
        js_temp['Unit Price'].append(price_added)
        js_temp['Total Price'].append(price_added*qtyyy)
        js_temp['Reconciled'].append(r_k)
    elif adf.iloc[x]['Jumlah Kirim Ho'] != 0 or adf.iloc[x]['Jumlah Masuk RSA 3'] !=0:
      for r_k_k in adf.iloc[x]['rk']:
        qtyyy = st.loc[st['rk'] == r_k_k]['Quantity'].sum()
        price_added = st.loc[st['rk'] == r_k_k]['Price'].values[0]
        #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Kirim Ho'], r_k_k, qtyyy, adf.iloc[x]['Jumlah Masuk RSA 3'])
        if adf.iloc[x]['Jumlah Masuk RSA 3'] >= qtyyy:
          sisa = adf.iloc[x]['Jumlah Masuk RSA 3'] - qtyyy
          sdf = adf.iloc[x]['Bulan']
          adf.at[bulan.index(sdf),'Jumlah Masuk RSA 3']= sisa
          js_temp['No Document'].append(str('KEI_IN')+str(kode)+str(qtyyy)+str(sdf))
          js_temp['Office'].append('KEI')
          js_temp['Code Product'].append(kode)
          js_temp['Nama Product'].append(nama)
          js_temp['Expired Date'].append(exp_date_)
          js_temp['Tanggal'].append(sdf)
          js_temp['Vendor'].append('')
          js_temp['From'].append('Transit')
          js_temp['To'].append('KEI')
          js_temp['REF'].append('')
          js_temp['Quantity'].append(qtyyy)
          js_temp['Satuan'].append(satuan)
          js_temp['Unit Price'].append(price_added)
          js_temp['Total Price'].append(price_added*qtyyy)
          js_temp['Reconciled'].append(r_k_k)        
        else:
          total_com = qtyyy 
          #print (adf['Jumlah Masuk RSA 3'].values)
          #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Kirim Ho'], r_k_k, qtyyy, adf.iloc[x]['Jumlah Masuk RSA 3'])
          for b in range(bulan.index(adf.iloc[x]['Bulan']), len(bulan)):
            masuk_rsa_3_bulan = adf.loc[adf['Bulan']==bulan[b]]['Jumlah Masuk RSA 3'].sum()
            keluar_ho_bulan = adf.loc[adf['Bulan']==bulan[b]]['Jumlah Kirim Ho'].sum()
            #print (bulan[b], total_com, masuk_rsa_3_bulan, keluar_ho_bulan)
            if total_com > masuk_rsa_3_bulan:
              bulan_terakhir_ada = df['Tanggal'].values[-1]
              #print (bulan_terakhir_ada)
              if bulan[b] != bulan_terakhir_ada:
                if adf['Jumlah Masuk RSA 3'].values[b:].sum() <  total_com:
                  continue
                else:
                  total_com = total_com  - masuk_rsa_3_bulan
                  sdf = adf.loc[adf['Bulan']==bulan[b]].index.to_list()[0]
                  adf.at[sdf,'Jumlah Masuk RSA 3']= 0
                  #print ('k', total_com)
                  continue
            if total_com <= masuk_rsa_3_bulan:
              #if bulan[b] != 'Desember':
             # print ('j', bulan[b], total_com)
              sisa = masuk_rsa_3_bulan - total_com
              sdf = adf.loc[adf['Bulan']==bulan[b]].index.to_list()[0]
              adf.at[sdf,'Jumlah Masuk RSA 3']= sisa
              #print ('j', total_com, bulan[b], sdf)
              js_temp['No Document'].append(str('KEI_IN')+str(kode)+str(qtyyy)+str(sdf))
              js_temp['Office'].append('KEI')
              js_temp['Code Product'].append(kode)
              js_temp['Nama Product'].append(nama)
              js_temp['Expired Date'].append(exp_date_)
              js_temp['Tanggal'].append(bulan[b])
              js_temp['Vendor'].append('')
              js_temp['From'].append('Transit')
              js_temp['To'].append('KEI')
              js_temp['REF'].append('')
              js_temp['Quantity'].append(qtyyy)
              js_temp['Satuan'].append(satuan)
              js_temp['Unit Price'].append(price_added)
              js_temp['Total Price'].append(price_added*qtyyy)
              js_temp['Reconciled'].append(r_k_k)
              break
                
      #print (bulan)        
        #print (adf['Jumlah Masuk RSA 3'].values, bulan[x], qtyyy)

  for x in range(len(adf)):
    if adf.iloc[x]['Jumlah Masuk RSA 3'] != 0:
      #print (adf.iloc[x]['Bulan'], adf.iloc[x]['Jumlah Masuk RSA 3'])
      js_temp['No Document'].append(str('KEI_IN')+str(kode)+str(adf.iloc[x]['Jumlah Masuk RSA 3'])+str(adf.iloc[x]['Bulan']))
      js_temp['Office'].append('KEI')
      js_temp['Code Product'].append(kode)
      js_temp['Nama Product'].append(nama)
      js_temp['Expired Date'].append(exp_date_)
      js_temp['Tanggal'].append(adf.iloc[x]['Bulan'])
      js_temp['Vendor'].append('')
      js_temp['From'].append('Vendor')
      js_temp['To'].append('KEI')
      js_temp['REF'].append('')
      js_temp['Quantity'].append(adf.iloc[x]['Jumlah Masuk RSA 3'])
      js_temp['Satuan'].append(satuan)
      js_temp['Unit Price'].append(adf.iloc[x]['Saldo'][-1])
      js_temp['Total Price'].append(adf.iloc[x]['Saldo'][-1] * adf.iloc[x]['Jumlah Masuk RSA 3'])
      js_temp['Reconciled'].append('')
  #print (adf['Jumlah Masuk RSA 3'].values)


        #adf.at[x+1,'Saldo']=(adf.iloc[x]['Jumlah Masuk RSA 3'] - adf.iloc[x]['Jumlah Kirim Ho']) + adf.iloc[x]['Saldo']
  return js_temp
#print (pd.DataFrame(check_ts(data_process_in, pd.DataFrame(unique_st)))['Quantity'].sum())
#pd.DataFrame(check_ts(data_process_in, pd.DataFrame(unique_st)))

#asd

kei_trans = pd.DataFrame()
for x in df_kei_data['CODE'].unique()[1:]:
  #x='A-P001'
  search_code = df_final.loc[df_final['Code Product']==x]
  #search_code_2 = search_code.loc[search_code['Reconciled']!=' '].sort_values('Tanggal')
  unique_rk = [x for x in search_code['Reconciled'].unique() if x != ' ' and x !='']
  search_rsa_3 = df_kei_data.loc[df_kei_data['CODE']==x]
  
  if (len(search_rsa_3) != 0) and (len(search_code)!= 0) :
    if len(search_code['Expired Date'].values) == 0:
      exp_date = ''
    else:
      exp_date = search_code['Expired Date'].values[0]
    data_process_out = trans_product_kei_out_rev(search_rsa_3, exp_date)
    kei_trans = kei_trans.append(pd.DataFrame(data_process_out))
    
    if len(trans_product_kei_in(search_rsa_3, exp_date)['Code Product']) != 0:
      data_process_in = pd.DataFrame(trans_product_kei_in(search_rsa_3, exp_date))
      unique_st = {
          'rk': [],
          'Quantity': [],
          'Month': [],
          'Price': []
      }
      for m in range(len(unique_rk)):
        sss = search_code.loc[search_code['Reconciled'] == unique_rk[m]]
        unique_st['rk'].append(sss['Reconciled'].values[0])
        unique_st['Quantity'].append(sss['Quantity'].sum())
        unique_st['Month'].append(bulan[sss['Tanggal'].iloc[0].month-1])
        unique_st['Price'].append(sss['Unit Price'].sum())
      tfg = pd.DataFrame(check_ts_kei_rev(data_process_in, pd.DataFrame(unique_st)))
      kei_trans = kei_trans.append(pd.DataFrame(tfg))
  #break
kei_trans

df_final = df_final.append(kei_trans)

df_final.info()

len(df_final['Code Product'].unique())

df_final['Tanggal'] = df_final['Tanggal'].replace(
    bulan,
    [np.datetime64('2021-01-31'), np.datetime64('2021-02-28'), np.datetime64('2021-03-30'), np.datetime64('2021-04-30'), np.datetime64('2021-05-30'), np.datetime64('2021-06-30'), np.datetime64('2021-07-31'), np.datetime64('2021-08-31'), np.datetime64('2021-09-30'), np.datetime64('2021-10-31'), 
     np.datetime64('2021-11-30'), np.datetime64('2021-12-31')]
)
df_final

df_final.to_excel('final_workbook_v21.xlsx', index=False)

